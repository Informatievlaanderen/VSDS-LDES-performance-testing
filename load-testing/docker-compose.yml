version: '3.3'

networks:
  performance_testing:
    name: performance_testing_network

services:

  jmeter-runner:
    container_name: performance_testing_jmeter-runner
    image: ghcr.io/informatievlaanderen/jmeter-runner:20240409t1532
    networks:
      - performance_testing 
    ports:
      - 9000:80
    volumes:
      - ${TEST_FOLDER:-./tests}:/home/node/jmeter-runner/tests:rw
      - ${TEMP_FOLDER:-./temp}:/home/node/jmeter-runner/temp:rw
    depends_on:
      ldes-server:
        condition: service_healthy
      ldes-server-workbench:
        condition: service_healthy
    environment:
      - TEST_FOLDER_BASE=/home/node/jmeter-runner/tests
      - TEMP_FOLDER_BASE=/home/node/jmeter-runner/temp
      - BASE_URL=${BASE_URL:-http://localhost:9000}
      - SILENT=${SILENT:-true}
      - MAX_RUNNING=${MAX_RUNNING:-1}
      - REFRESH_TIME=${REFRESH_TIME:-30}
      - RUN_TEST_API_KEY=${RUN_TEST_API_KEY:-}
      - CHECK_TEST_API_KEY=${CHECK_TEST_API_KEY:-}
      - DELETE_TEST_API_KEY=${DELETE_TEST_API_KEY:-}
      - CUSTOM_LABELS=${CUSTOM_LABELS:-threads size type component members_per_page}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1.5GB'
        reservations:
          cpus: '0.1'
          memory: '0.25GB'

  ldes-server-workbench:
    container_name: performance_testing_ldio-workbench
    # image: ghcr.io/informatievlaanderen/ldi-orchestrator:latest
    image: ldes/ldi-orchestrator:${LDI_ORCHESTRATOR_TAG:-2.5.0-SNAPSHOT}
    networks:
      - performance_testing
    ports:
      - ${LDIO_WORKBENCH_PORT:-8081}:8080
    volumes:
      - ./workbench/tmp/epsg:/tmp/Databases:rw
      - ./workbench/config.yml:/ldio/application.yml:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://ldes-server-workbench:8080/actuator/health"]
    environment:
      - SIS_DATA=/tmp
      - JAVA_TOOL_OPTIONS=-XX:MaxRAMPercentage=90 -XX:MinRAMPercentage=50
      - SERVER_PORT=8080
      - ORCHESTRATOR_DIRECTORY=/ldio/pipelines
    deploy:
      resources:
        limits:
          cpus: '3.5'
          memory: '15.0GB'
        reservations:
          cpus: '0.10'
          memory: '0.25GB'

  ldes-mongodb:
    container_name: performance_testing_ldes-mongodb
    image: mongo:${MONGODB_TAG:-latest}
    networks:
      - performance_testing
    ports:
      - ${MONGODB_PORT:-27017}:27017
    # volumes:
    #   - ./database:/data/db:rw
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '3.0GB'
        reservations:
          cpus: '0.50'
          memory: '0.5GB'

  ldes-server:
    container_name: performance_testing_ldes-server
    # image: ghcr.io/informatievlaanderen/ldes-server:latest
    # image: ldes/ldes-server:${LDES_SERVER_TAG:-2.3.0-SNAPSHOT} # CrowdScan
    # image: ldes/ldes-server:${LDES_SERVER_TAG:-2.4.1-SNAPSHOT} # Geomobility
    # image: ldes/ldes-server:${LDES_SERVER_TAG:-2.10.0-SNAPSHOT} # Telraam
    image: ldes/ldes-server:${LDES_SERVER_TAG:-2.14.0-SNAPSHOT}
    # image: ghcr.io/informatievlaanderen/ldes-server:20240405144556
    # image: ghcr.io/informatievlaanderen/ldes-server:20240405143052
    networks:
      - performance_testing
    ports:
      - ${LDES_SERVER_PORT:-8080}:8080
    volumes:
      - ./server/tmp/epsg:/tmp/Databases:rw
      - ./server/config.yml:/application.yml:ro
    depends_on:
      - ldes-mongodb
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://ldes-server:8080/actuator/health"]
    environment:
      - SIS_DATA=/tmp
      - JAVA_TOOL_OPTIONS=-XX:MaxRAMPercentage=90 -XX:MinRAMPercentage=50
      - SPRING_DATA_MONGODB_URI=mongodb://ldes-mongodb:27017/performance-testing
      - LDESSERVER_HOSTNAME=http://ldes-server:${LDES_SERVER_PORT:-8080}
      - SERVER_PORT=8080
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: '2.0GB'
        reservations:
          cpus: '0.50'
          memory: '0.5GB'
